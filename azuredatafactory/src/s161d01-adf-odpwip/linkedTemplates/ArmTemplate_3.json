{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "s161d01-adf-odpwip"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_HTTP-Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_Excel",
								"type": "DatasetReference",
								"parameters": {
									"Base_URL": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Base_URL",
										"type": "Expression"
									},
									"RelativeURL": {
										"value": "@activity('LKP_Config').output.firstRow.Source_RelativeURL",
										"type": "Expression"
									},
									"WorkSheetName": {
										"value": "@activity('LKP_Config').output.firstRow.Source_WorksheetName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Onetime_DataPortal_Migration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DP_T_Template",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Template]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateParentId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateParentId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TemplateName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TemplateDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TemplateDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GuidanceLink",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GuidanceLink",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GuidanceDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GuidanceDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GuidanceNotes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GuidanceNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailFlag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmailFlag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DuplicateCheckType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DuplicateCheckType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestAttachmentQuery",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestAttachmentQuery",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestAttachmentFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestAttachmentFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SkipValidation",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SkipValidation",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkipCleanCSV",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SkipCleanCSV",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TemplateRunOrder",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateRunOrder",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Qualifications",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Qualifications",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludedInOfficialStatistics",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IncludedInOfficialStatistics",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Template",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Template",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_AwardingOrganisation",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_AwardingOrganisation]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationRecognitionNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationRecognitionNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationAcronym",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationAcronym",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationContactEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationContactEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationWebsite",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationWebsite",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationNumberType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationNumberType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationStatusType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationStatusType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationRecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationRecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationSurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationSurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationNumberTypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationNumberTypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "JCQFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "JCQFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FTP-PermissionsSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FTP-PermissionsSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationQualificationSubmitter",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AwardingOrganisationQualificationSubmitter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationFeesURL",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AwardingOrganisationFeesURL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationOfqualStatusType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationOfqualStatusType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationOfqualRecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationOfqualRecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationOfqualWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationOfqualWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationOfqualSurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationOfqualSurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationCCEAStatusType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationCCEAStatusType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationCCEARecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationCCEARecognisedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationCCEAWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationCCEAWithdrawnOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationCCEASurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AwardingOrganisationCCEASurrenderedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_AwardingOrganisation",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_AwardingOrganisation",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_Collection",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Collection]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CollectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TimetableId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TimetableId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CollectionName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CollectionName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CollectionDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CollectionDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CollectionIdentifierValue",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CollectionIdentifierValue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CollectionStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CollectionStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CollectionEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CollectionEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CollectionHardCloseDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CollectionHardCloseDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CollectionPublicationDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CollectionPublicationDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CollectionOpen",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionOpen",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Qualifications",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Qualifications",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Collection",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Collection",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_Mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Mapping]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceColumnName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceColumnName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceDataType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceDataType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StagingColumnName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StagingColumnName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StagingOrder",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StagingOrder",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ColumnDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ColumnDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StagingDataType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StagingDataType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TargetColumnName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetColumnName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TargetDataType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetDataType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TargetInsertLogic",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetInsertLogic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessKeyFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BusinessKeyFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TimetableFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "TimetableFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CollectionIdentifierFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CollectionIdentifierFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SensitiveColumnFlag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SensitiveColumnFlag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Active",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Mapping",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Mapping",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_Rules",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Rules]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RuleName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RuleName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RuleDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RuleDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TSQLExpression",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TSQLExpression",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ErrorMessage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ErrorMessage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Rules",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Rules",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_RulesTempTables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_RulesTempTables]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RulesTempTablesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesTempTablesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TempTableLogic",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TempTableLogic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TempTableName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TempTableName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TempTableDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TempTableDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_RulesTempTables",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_RulesTempTables",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "Ref_T_Lookups",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[Ref_T_Lookups]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LookupLocation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LookupLocation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LookupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LookupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LookupName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LookupName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LookupCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LookupCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LookupValue",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LookupValue",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LookupDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LookupDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortOrder",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SortOrder",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DefaultValue",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "DefaultValue",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ParentLookupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentLookupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ParentLookupCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParentLookupCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ValidStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ValidStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ValidEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ValidEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MD_InsertedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MD_InsertedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MD_InsertedUser",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MD_InsertedUser",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MD_UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MD_UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MD_UpdatedUser",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MD_UpdatedUser",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "MD_Master",
									"DS_Table": "Ref_T_Lookups",
									"DS_KVS_ConnectionString": "scrt-sqldb-PROD-MasterData"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "Ref_T_Lookups",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_RulesTempTablesMapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_RulesTempTablesMapping]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RulesTempTablesMappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesTempTablesMappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RulesTempTablesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesTempTablesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_RulesTempTablesMapping",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_RulesTempTablesMapping",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_TempTablesColumnJoin",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_TempTablesColumnJoin]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TempTablesColumnJoinId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TempTablesColumnJoinId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RulesTempTablesMappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesTempTablesMappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OverwrittingSourceColumnName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverwrittingSourceColumnName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OverwrittingTempTableColumnName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverwrittingTempTableColumnName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_TempTablesColumnJoin",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_TempTablesColumnJoin",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_Timetable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Timetable]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TimetableId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TimetableId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ParentTimetableId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentTimetableId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CalendarYearQuarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarYearQuarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CalendarMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarMonth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CalendarYearMonth",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarYearMonth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AcademicYear",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AcademicYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AcademicQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AcademicQuarter",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AcademicYearQuarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AcademicYearQuarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AcademicMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AcademicMonth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AcademicYearMonth",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AcademicYearMonth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Timetable",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Timetable",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_ValidationMapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_ValidationMapping]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ValidationMappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ValidationMappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RulesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ValidationTypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ValidationTypeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_ValidationMapping",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_ValidationMapping",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_ValidationMappingAssociated",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_ValidationMappingAssociated]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ValidationMappingAssociatedId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ValidationMappingAssociatedId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ValidationMappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ValidationMappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MappingId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_ValidationMappingAssociated",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_ValidationMappingAssociated",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_CollectionAwardingOrganisation",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_CollectionAwardingOrganisation]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CollectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_CollectionAwardingOrganisation",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_CollectionAwardingOrganisation",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					},
					{
						"name": "DP_T_Returns",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Returns]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileFormat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FileFormat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileSizeBytes",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "FileSizeBytes",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NumberOfRows",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NumberOfRows",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FTPFilePath",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FTPFilePath",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BlobFilePath",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BlobFilePath",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FileModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateCollected",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateCollected",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RejectedReason",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RejectedReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WarningsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "WarningsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Returns",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Returns",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "z_DataMigration"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-09T10:13:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Onetime_DataPortal_Migration_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DP_T_Returns",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dp_migration].[DP_T_Returns]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TemplateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CollectionAwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileFormat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FileFormat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileSizeBytes",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "FileSizeBytes",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NumberOfRows",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NumberOfRows",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FTPFilePath",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FTPFilePath",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BlobFilePath",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BlobFilePath",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FileModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DateCollected",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateCollected",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RejectedReason",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RejectedReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WarningsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "WarningsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Returns",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_migration",
									"DS_Table": "DP_T_Returns",
									"DS_KVS_ConnectionString": "scrt-sqldb-testconfigdb"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "z_DataMigration"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-09T10:13:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Onetime_Import')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Template_SpecialConsideration",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Exam Series",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExamSeries",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Reporting date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reportingdate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Awarding Organisation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Centre No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreNo",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Centre type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreType",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Request identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestIdentifier",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Unique Candidate Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UniqueCandidateIdentifier",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QAN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QAN",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specification title",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationTitle",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specification code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationCode",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Qualification level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Unit/component description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitComponentDescription",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Assessment type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AssessmentType",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Request date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Exam/coursework date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExamCourseworkDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Special consideration type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecialConsiderationType",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Disadvantage category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisadvantageCategory",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specific disadvantage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificDisadvantage",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Tariff",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tariff",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Rejection reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RejectionReason",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Evidence requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EvidenceRequested",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Evidence received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EvidenceReceived",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Template_SpecialConsideration",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Template_Appeals",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Template_SpecialConsideration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Exam Series",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExamSeries",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Reporting Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportingDate",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Awarding Organisation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisation",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Case Ref No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CaseRefNo",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Centre No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreNo",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Unique Candidate Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UniqueCandidateIdentifier",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QAN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QAN",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specification title",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationTitle",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specification code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationCode",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Qualification level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateReceived",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date completed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateCompleted",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Nature of appeal",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NatureOfAppeal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Current stage of appeal",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CurrentStageOfAppeal",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "What stage was appeal resolved",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WhatStageWasAppealResolved",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Appeal upheld",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppealUpheld",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pre Appeal unit raw mark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PreAppealUnitRawMark",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Post Appeal raw mark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostAppealRawMark",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pre Appeal unit UMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PreAppealUnitUMS",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Post Appeal UMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostAppealUMS",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pre Appeal qualification UMS (modular) / Scale score (linear)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PreAppealQualificationUMSModularScaleScoreLinear",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Post Appeal qualification UMS (modular) / Scale score (linear)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostAppealQualificationUMSModularScaleScoreLinear",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pre Appeal qualification grade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PreAppealQualificationGrade",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Post Appeal qualification grade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostAppealQualificationGrade",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Unit code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitCode",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date script requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateScriptRequested",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date reason requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateReasonRequested",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Template_Appeals",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Ref_T_Tier",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Template_Appeals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AB",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationRecognitionNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisationRecognitionNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CertificationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CertificationCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "UnitOrComponentCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitOrComponentCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Tier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tier",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ColumnToIdentifyTier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ColumnToIdentifyTier",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "config",
									"Table": "Ref_T_Tier",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy T_Data_Submission_Information",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Ref_T_Tier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data_Submision_Id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Data_Submision_Id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DP_ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DP_ReturnsId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DP_TemplateId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DP_TemplateId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DP_AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DP_AwardingOrganisationId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Anchor",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Anchor",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Template_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Template_Name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Data_Submission_Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Data_Submission_Created",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Data_Submission_Last_Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Data_Submission_Last_Updated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Reject_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Reject_Status",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "Regulator_reference",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Regulator_reference",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "T_Data_Submission_Information",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SummerAwarding_2_CandidateSubjectLevel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy T_Data_Submission_Information",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ExamSeries",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExamSeries",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ReportingDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportingDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QAN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QAN",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CertificationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CertificationCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpecificationTitle",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationTitle",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CentreNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreNo",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PartialAbsence",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PartialAbsence",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CentreType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CentreCandidateNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreCandidateNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "UniqueCandidateIdentifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UniqueCandidateIdentifier",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ULN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ULN",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MiddleNames",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MiddleNames",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DOB",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SubjectLevelGrade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubjectLevelGrade",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SubjectLevelUniformMark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubjectLevelUniformMark",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SubjectLevelScaledMark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubjectLevelScaledMark",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CentreAssessedGrade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreAssessedGrade",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CentreRankOrder",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CentreRankOrder",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "SummerAwarding_2_CandidateSubjectLevel",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy SummerAwarding_1ab_GradeBoundary",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy SummerAwarding_2_CandidateSubjectLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSubmissionId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RowNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganisationName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ExamSeries",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExamSeries",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ReportingDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportingDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "UnitOrComponentCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitOrComponentCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpecificationTitle",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SpecificationTitle",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Tier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tier",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MaxUniformMark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxUniformMark",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MaxRawUnweightedMark",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxRawUnweightedMark",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WeightingFactor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WeightingFactor",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Grade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grade",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Boundary",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Boundary",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CarryForward",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CarryForward",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "SummerAwarding_1ab_GradeBoundary",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy QualificationGradesLookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy SummerAwarding_1ab_GradeBoundary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Grade",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Grade",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "GradeValue",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "GradeValue",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "QualificationGradesLookup",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Ref_T_TQ_AccessArrangementTypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy QualificationGradesLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "AccessArrangementType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccessArrangementType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "config",
									"Table": "Ref_T_TQ_AccessArrangementTypes",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Ref_T_TQ_OccupationalMaps",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Ref_T_TQ_AccessArrangementTypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Route",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pathway",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pathway",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "config",
									"Table": "Ref_T_TQ_OccupationalMaps",
									"SecretName": "scrt-sqldb-PROD-OFQDS-STATS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy OFQSQL02_T_Diplomas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Template_DP_T_JCQSpecCodes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "OrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrganisationId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DiplomaStructureId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DiplomaStructureId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "RecognitionNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RecognitionNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "SSA",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SSA",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_staging",
									"Table": "OFQSQL02_T_Diplomas",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy DP_T_Qualification",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy OFQSQL02_T_Diplomas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "QualificationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualificationId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationNumberNoObliques",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationNumberNoObliques",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationMDId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualificationMDId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationTitle",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationTitle",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "LegacyDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LegacyDescription",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "QualificationStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationStatus",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationSSACode1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationSSACode1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationSSADescription1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationSSADescription1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationSSACode2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationSSACode2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationSSADescription2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationSSADescription2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "LinkToSpecification",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LinkToSpecification",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualCredit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualCredit",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "OverallGradingType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverallGradingType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "GradingScale",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GradingScale",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OfferedInEngland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInEngland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "OfferedInWales",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInWales",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "OfferedInNorthernIreland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInNorthernIreland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "QualGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualMinimumGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualMinimumGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualMaximumGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualMaximumGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "TQT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TQT",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "EmbargoDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EmbargoDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OrganisationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrganisationId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationLevelId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualificationLevelId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationTypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualificationTypeId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualSSAId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualSSAId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "OverallGradingTypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OverallGradingTypeId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "GradingScaleId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GradingScaleId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationOrganisationReferenceNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationOrganisationReferenceNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PreSixteen",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PreSixteen",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "SixteenToEighteen",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SixteenToEighteen",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "EighteenPlus",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EighteenPlus",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "NineteenPlus",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NineteenPlus",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInEngland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInEngland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInWales",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInWales",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInNorthernIreland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInNorthernIreland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "OfferedInternationally",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInternationally",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Qualification",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy DP_T_Qualification_QiW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy DP_T_Qualification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Qualification_Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Qualification_Id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QiW_Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QiW_Id",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationNumber_QiW",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationNumber_QiW",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationNumber_MDDB",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationNumber_MDDB",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Organisation_QiW_Id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Organisation_QiW_Id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AwardingOrganisationMDId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Title_QiW",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title_QiW",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Title_Ofqual",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title_Ofqual",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegulationStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalStartDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OperationalEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CertificationEndDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationType_QiW",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationType_QiW",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationTypeCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationTypeCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevelCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualificationLevelCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrganisationReferenceNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OrganisationReferenceNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "LinkToSpecification",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LinkToSpecification",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualCredit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualCredit",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualSSACode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QualSSACode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "GradingScaleCode_QiW",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GradingScaleCode_QiW",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OverallGradingType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverallGradingType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "GradingScale",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GradingScale",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Specialism",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Specialism",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Pathways",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pathways",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OfferedInEngland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInEngland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "OfferedInWales",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInWales",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "OfferedInNorthernIreland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OfferedInNorthernIreland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "PreSixteen",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PreSixteen",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "SixteenToEighteen",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SixteenToEighteen",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "EighteenPlus",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EighteenPlus",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "NineteenPlus",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NineteenPlus",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInEngland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInEngland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInWales",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInWales",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "FundingInNorthernIreland",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FundingInNorthernIreland",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "GCSESizeEquivalence",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GCSESizeEquivalence",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "GCESizeEquivalence",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GCESizeEquivalence",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualMinimumGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualMinimumGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualMaximumGLH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualMaximumGLH",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "TQT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TQT",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "EmbargoDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EmbargoDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "QiW_LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "QiW_LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UI_LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UI_LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_Qualification_QiW",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy DP_T_CAG_SubjectMapping",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy DP_T_Qualification_QiW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AwardingOrganisation",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "EntryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Subject",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Subject",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_CAG_SubjectMapping",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy DP_T_CAG_SplitEntryCentres",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy DP_T_CAG_SubjectMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CentreNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CentreNo",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationLevel",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Subject",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Subject",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_CAG_SplitEntryCentres",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Template_DP_T_JCQSpecCodes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JCQSpecCodesId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "JCQSpecCodesId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "AB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AB",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Spec_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Spec_Code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Cert_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cert_Code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QualificationNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Qual_Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Qual_Level",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Qual_Level_Formatted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Qual_Level_Formatted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IB_Code1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IB_Code1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IB_Code2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IB_Code2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IB_Title1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IB_Title1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IB_Title2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IB_Title2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "JCQ_Code",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "JCQ_Code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "JCQ_Title",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "JCQ_Title",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OfqualSubjectGrouping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OfqualSubjectGrouping",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Tier",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Tier",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DoubleOrSingleAward",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DoubleOrSingleAward",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FullOrShortCourse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FullOrShortCourse",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Applied",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Applied",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Phase",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Phase",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Last_Year_Ent",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Last_Year_Ent",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "This_Year_Ent",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "This_Year_Ent",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ReturnsId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateInserted",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserInserted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateUpdated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UserUpdated",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CleansedSpecCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CleansedSpecCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dp_config",
									"Table": "DP_T_JCQSpecCodes",
									"SecretName": "scrt-sqldb-PROD-DataPortal"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Ref_T_Lookups",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "MD_Master",
									"DS_Table": "Ref_T_Lookups",
									"DS_KVS_ConnectionString": "scrt-sqldb-PROD-MasterData"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy DP_T_RulesLookups",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "dp_config",
									"DS_Table": "DP_T_RulesLookups",
									"DS_KVS_ConnectionString": "scrt-sqldb-devconfigdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SinglePurposePipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-09T10:13:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ProcessNotifications')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_EmailQueue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [notification].[t_EmailQueue]\nWHERE [Active] = 1 AND [HoldTill] < CONVERT(datetimeoffset, SYSDATETIMEOFFSET()  ) AT TIME ZONE 'GMT Standard Time'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "FOR_EmailQueue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_EmailQueue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_EmailQueue').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SinglePurposePipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-09T10:13:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SQLServer-ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_SinkObjectType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_SinkObjectType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File, ' FAILURE: ', activity('SWT_SinkObjectType').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_SinkObjectType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@concat(activity('LKP_Config').output.firstRow.Source_ObjectType, '_TO_',activity('LKP_Config').output.firstRow.Sink_ObjectType)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Table_TO_Parquet File",
									"activities": [
										{
											"name": "CP_SQLServer_ADLSG2_Parquet",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_ADLSG2_Parquet",
													"type": "DatasetReference",
													"parameters": {
														"DS_File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"DS_File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"DS_File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														},
														"DS_Service_Endpoint": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Table_TO_CSV File",
									"activities": [
										{
											"name": "CP_SQLServer_ADLSG2_CSV",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_ADLSG2_CSV",
													"type": "DatasetReference",
													"parameters": {
														"Service_EndPoint": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
															"type": "Expression"
														},
														"Key_Vault_Secret_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
															"type": "Expression"
														},
														"File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"File_Path_Directory": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_Directory,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
															"type": "Expression"
														},
														"File_Path_File": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_File,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
															"type": "Expression"
														},
														"File_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
															"type": "Expression"
														},
														"File_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "View_TO_CSV File",
									"activities": [
										{
											"name": "CP_SQLServer_View_ADLSG2_CSV",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_ADLSG2_CSV",
													"type": "DatasetReference",
													"parameters": {
														"Service_EndPoint": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
															"type": "Expression"
														},
														"Key_Vault_Secret_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
															"type": "Expression"
														},
														"File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"File_Path_Directory": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_Directory,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
															"type": "Expression"
														},
														"File_Path_File": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_File,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
															"type": "Expression"
														},
														"File_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
															"type": "Expression"
														},
														"File_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "24950"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SQLServer-AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Used to migrate Data Portal data into New Azure DB",
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch Source Types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Switch Source Types",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName, ' FAILURE: ', activity('Switch Source Types').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch Source Types",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "SWT_TransferType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.Source_ObjectType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "SQL Block",
									"activities": [
										{
											"name": "Copy using SQL Script",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "AzureSqlSink",
													"preCopyScript": {
														"value": "@{if(equals(activity('LKP_Config').output.firstRow.Sink_ObjectType,'Stage Table' ),concat('TRUNCATE TABLE ',activity('LKP_Config').output.firstRow.Sink_SchemaName ,'.', activity('LKP_Config').output.firstRow.Sink_TableName),'')}",
														"type": "Expression"
													},
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Table",
									"activities": [
										{
											"name": "Copy using Table",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "AzureSqlSink",
													"preCopyScript": {
														"value": "@{if(equals(activity('LKP_Config').output.firstRow.Sink_ObjectType,'Stage Table' ),concat('TRUNCATE TABLE ',activity('LKP_Config').output.firstRow.Sink_SchemaName ,'.', activity('LKP_Config').output.firstRow.Sink_TableName),'')}",
														"type": "Expression"
													},
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "View",
									"activities": [
										{
											"name": "Copy using View",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "AzureSqlSink",
													"preCopyScript": {
														"value": "@{if(equals(activity('LKP_Config').output.firstRow.Sink_ObjectType,'Stage Table' ),concat('TRUNCATE TABLE ',activity('LKP_Config').output.firstRow.Sink_SchemaName ,'.', activity('LKP_Config').output.firstRow.Sink_TableName),'')}",
														"type": "Expression"
													},
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_SQLServer",
													"type": "DatasetReference",
													"parameters": {
														"Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"SecretName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					},
					{
						"name": "SWT_TransferType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.TransferType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Type 1",
									"activities": [
										{
											"name": "EXEC Type 1 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('DROP TABLE IF EXISTS ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 2",
									"activities": [
										{
											"name": "EXEC Type 2 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 3",
									"activities": [
										{
											"name": "EXEC Type3 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' EXEC sp_rename ''' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''' , ''' , activity('LKP_Config').output.firstRow.Sink_TableName ,'_' , formatDateTime(utcnow(),'yyyyMMddhhmmss') , ''' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 4",
									"activities": [
										{
											"name": "EXEC Type 4 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 5",
									"activities": [
										{
											"name": "EXEC Type 5 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "24950"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UAMI_PE_Azure SQL-UAMI_PE_Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName, ' FAILURE: ', activity('Source_Explicit').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Source_Explicit",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SWT_TransferType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, '')\n, 1\n, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy Data With SQLBlock",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_UAM_PE_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_Server": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Server",
													"type": "Expression"
												},
												"DS_Database": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Database",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_UAM_PE_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
													"type": "Expression"
												},
												"DS_Server": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Server",
													"type": "Expression"
												},
												"DS_Database": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Database",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Data With Table Reference",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_UAM_PE_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_Server": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Server",
													"type": "Expression"
												},
												"DS_Database": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Database",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_UAM_PE_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
													"type": "Expression"
												},
												"DS_Server": "s161d01-sql-odp.database.windows.net",
												"DS_Database": "PlatformDB"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SWT_TransferType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.TransferType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Type 1",
									"activities": [
										{
											"name": "EXEC Type 1 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('DROP TABLE IF EXISTS ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_Server": "s161d01-sql-odp.database.windows.net",
														"DS_Database": "PlatformDB"
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 2",
									"activities": [
										{
											"name": "EXEC Type 2 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 3",
									"activities": [
										{
											"name": "EXEC Type3 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' EXEC sp_rename ''' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''' , ''' , activity('LKP_Config').output.firstRow.Sink_TableName ,'_' , formatDateTime(utcnow(),'yyyyMMddhhmmss') , ''' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 4",
									"activities": [
										{
											"name": "EXEC Type 4 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_Server": "s161d01-sql-odp.database.windows.net",
														"DS_Database": "PlatformDB"
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 5",
									"activities": [
										{
											"name": "EXEC Type 5 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "3"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 295
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 3
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UAMI_PE_AzureSQL-UAMI_ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_Source_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_Source_Type",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File, ' FAILURE: ', activity('SWT_Source_Type').error.message)\n",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_Source_Type",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(empty(activity('LKP_Config').output.firstRow.Source_Server),'Skip'\n,if(or(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, '')\n,empty(activity('LKP_Config').output.firstRow.Source_SqlBlock))\n, 'Direct'\n, 'SqlBlock'))",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Direct",
									"activities": [
										{
											"name": "Copy Data With Table Reference",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"dataIntegrationUnits": 32
											},
											"inputs": [
												{
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"DS_Server": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Server",
															"type": "Expression"
														},
														"DS_Database": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Database",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_UAM_PE_ADLSG2_Parquet",
													"type": "DatasetReference",
													"parameters": {
														"DS_File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"DS_File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"DS_File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "SqlBlock",
									"activities": [
										{
											"name": "Copy Data With SQLBlock",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"DS_Server": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Server",
															"type": "Expression"
														},
														"DS_Database": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Database",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_UAM_PE_ADLSG2_Parquet",
													"type": "DatasetReference",
													"parameters": {
														"DS_File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"DS_File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"DS_File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Skip",
									"activities": [
										{
											"name": "Set skipStep 2",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "skipStep",
												"value": "1"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set skipStep",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "skipStep",
										"value": "1"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "2"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 19
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"variables": {
					"skipStep": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T11:20:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/zCopyDB2ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data With Table Reference",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UKPRN",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UKPRN",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "LearnRefNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LearnRefNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ULN",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ULN",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_UAM_PE_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": "Valid",
									"DS_Table": "LearnerDestinationandProgression",
									"DS_Server": "s161d01-sql-sld.database.windows.net",
									"DS_Database": "ILR2122DataStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_UAM_PE_ADLSG2_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"DS_File_Path_Container": "datalake",
									"DS_File_Path_Directory": "root/raw/internal/ilrdemo/2022/02/14//",
									"DS_File_Path_File": "Learner.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "z_DataMigration"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FTP_Top_GetLocations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FOR_EachConfiguredFTPPath",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_GetFolderNameList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_GetFolderNameList').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "EXPL_ProcessLocations",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_FTP_ProcessLocations",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"FTP_Host": {
												"value": "@activity('LKP_GetFTPConnectionDetails').output.firstRow.Service_Endpoint",
												"type": "Expression"
											},
											"FTP_UserName": {
												"value": "@activity('LKP_GetFTPConnectionDetails').output.firstRow.Key_Vault_Secret_Username",
												"type": "Expression"
											},
											"FTP_Password": {
												"value": "@activity('LKP_GetFTPConnectionDetails').output.firstRow.Key_Vault_Secret_Password",
												"type": "Expression"
											},
											"FTP_FilePath_Directory": {
												"value": "@item().FolderStructure",
												"type": "Expression"
											},
											"CollectionAwardingOrganisationId": {
												"value": "@item().CollectionAwardingOrganisationId",
												"type": "Expression"
											},
											"APIBaseURL": {
												"value": "@activity('LKP_GetWebServiceConnectionDetails').output.firstRow.Base_URL",
												"type": "Expression"
											},
											"APICode_kv_Secret": {
												"value": "@activity('LKP_GetWebServiceConnectionDetails').output.firstRow.Key_Vault_Secret_Password",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LKP_GetFolderNameList",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_GetWebServiceConnectionDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT AO.AwardingOrganisationRecognitionNumber + '\\' + T.TemplateName + '\\' AS FolderStructure, MAX (CAO.CollectionAwardingOrganisationId) AS CollectionAwardingOrganisationId\n--, AO.AwardingOrganisationId, AO.AwardingOrganisationName\nFROM [dp_config].[DP_T_Template] T \n INNER JOIN [dp_config].[DP_T_Collection] C ON T.TemplateId = C.TemplateId \n INNER JOIN [dp_config].[DP_T_CollectionAwardingOrganisation] CAO ON C.CollectionId = CAO.CollectionId\n INNER JOIN [dp_config].[DP_T_AwardingOrganisation] AO ON CAO.AwardingOrganisationId = AO.AwardingOrganisationId\nWHERE AO.Active = 1\n AND CAO.[Active] = 1\n AND C.[Active] = 1\n AND T.[Active] = 1\n AND AO.AwardingOrganisationRecognitionNumber like 'risk%'\nGROUP BY  AO.AwardingOrganisationRecognitionNumber + '\\' + T.TemplateName + '\\' , AO.AwardingOrganisationId, AO.AwardingOrganisationName",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LKP_LogStart",
						"description": "Logging Agent Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (Scheduler)"
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_GetFTPConnectionDetails",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT Service_Endpoint, Key_Vault_Secret_Username, Key_Vault_Secret_Password\nFROM [di_config].[t_Connection] \nWHERE ConnectionName = '@{pipeline().parameters.FTP_Connection_Name}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LKP_LogEventSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_EachConfiguredFTPPath",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogEventFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_EachConfiguredFTPPath",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_GetWebServiceConnectionDetails",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_GetFTPConnectionDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT Base_URL, Key_Vault_Secret_Password\nFROM [di_config].[t_Connection] \nWHERE ConnectionName = '@{pipeline().parameters.WebService_Connection_Name}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FTP_Connection_Name": {
						"type": "string",
						"defaultValue": "PROD_FTP_Fileshare"
					},
					"WebService_Connection_Name": {
						"type": "string",
						"defaultValue": "DEV_API_ReturnRegisterWebService"
					}
				},
				"folder": {
					"name": "ReturnsProcesses"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JobStepParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FOR_JobStep_Parallel",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_GetJobSteps",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_GetJobSteps').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "LKP_Get_Enabled_JobStep",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogStart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT [JobID], JobGroupID ,\nJobOrderNumber , \n[ParallelRunSteps],\n[sysState],\nconvert(int, JobStepOnFailure) JobStepOnFailure,\n [JobStepID], [Pipeline], \nREPLACE(JobName,'\\','\\\\') AS JobName,\nREPLACE([JobStepName],'\\','\\\\') AS JobStepName\nFROM [appconfig].[vPipeline] \nWHERE JobStepId= '@{item().JobStepID}'\n--AND [sysState] = 1\nAND ExecutionInstanceId = '@{pipeline().parameters.ExecutionInstanceId}' \nOrder by OrderNumber",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IF_Enabled",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_Get_Enabled_JobStep",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LKP_Get_Enabled_JobStep').output.firstRow.sysState,1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SWT_JobStepType",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.firstRow.Pipeline",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "Azure SQL - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "HTTP - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_HTTP-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_HTTP-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "BLOB - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_BLOB-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_BLOB-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - BLOB",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-BLOB",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-BLOB",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - SQL Server",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-SQL Server",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-SQL Server",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - FileShare",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Execute_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "SQL Server - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_SQLServer-AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_SQLServer-AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FILE - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_Azure File-ADSL2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure File-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_AzureSQL-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FileShare - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_FileShare-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_FileShare-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - FileShare",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Delete - FileShare",
															"activities": [
																{
																	"name": "EXPL_Delete_FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Delete_FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - BLOB",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-BLOB",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-BLOB",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "SQL Server - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_SQLServer-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_SQLServer-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "API - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_API-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_API-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - Databricks",
															"activities": [
																{
																	"name": "EXPL_Execute_Databricks",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_DBR",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FileShare - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_FileShare-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_FileShare-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - Azure SQL",
															"activities": [
																{
																	"name": "PL_ExecADLSG2_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - UAMI PE Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Execute_UAMI_PE_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_UAMI_PE_AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "UAMI PE Azure SQL - UAMI PE ADLSG2",
															"activities": [
																{
																	"name": "EXPL_UAMI PE Azure SQL - UAMI PE ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_UAMI_PE_AzureSQL-UAMI_ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "UAMI PE Azure SQL - UAMI PE Azure SQL",
															"activities": [
																{
																	"name": "EXPL_UAMI PE Azure SQL - UAMI PE Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_UAMI_PE_Azure SQL-UAMI_PE_Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - UAMI PE ADLSG2",
															"activities": [
																{
																	"name": "EXPL_Azure SQL - UAMI PE Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_AzureSQL-UAMI_ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "LKP_LogSuccess",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Enabled",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('PL_JobStepParallel - Enabled: ', activity('LKP_Get_Enabled_JobStep').output.firstRow.SysState, ' | JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName )",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IF_Terminate",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_UpdateStepStatus_OnFailure",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LKP_Get_Enabled_JobStep').output.firstRow.JobStepOnFailure,2)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Break Out Job Seq",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "LKP_LogMasterEventFailure",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": {
														"value": "@variables('PipelineRunId')",
														"type": "Expression"
													},
													"connectVia": {
														"referenceName": "AutoResolveIntegrationRuntime",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": "{“message”:”Cancelling the pipeline”}",
													"authentication": {
														"resource": "https://management.azure.com",
														"credential": {
															"referenceName": "LS_Cred_uami_adf_wip",
															"type": "CredentialReference"
														}
													}
												}
											},
											{
												"name": "LKP_LogMasterEventFailure",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
														"storedProcedureParameters": {
															"Action": {
																"type": "String",
																"value": "Stop"
															},
															"DataFactoryName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().DataFactory",
																	"type": "Expression"
																}
															},
															"Description": {
																"type": "String",
																"value": null
															},
															"LogID": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.ParentLogID",
																	"type": "Expression"
																}
															},
															"PipelineId": {
																"type": "String",
																"value": {
																	"value": "@pipeline().RunId",
																	"type": "Expression"
																}
															},
															"PipelineName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().Pipeline",
																	"type": "Expression"
																}
															},
															"TriggerId": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerId",
																	"type": "Expression"
																}
															},
															"TriggerName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerName",
																	"type": "Expression"
																}
															},
															"TriggerTime": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerTime",
																	"type": "Expression"
																}
															},
															"TriggerType": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerType",
																	"type": "Expression"
																}
															},
															"ParentLogID": {
																"type": "Int32",
																"value": null
															},
															"Status": {
																"type": "String",
																"value": "Failure"
															},
															"ExecutionInstanceId": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.ExecutionInstanceId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_CONFIG",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "LKP_LogFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Enabled",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('PL_JobStepParallel - Enabled: ', activity('LKP_Get_Enabled_JobStep').output.firstRow.SysState, ' | JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName )",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Failure"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogStart",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('PL_JobStepParallel - JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"value": {
														"value": "@pipeline().parameters.ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_UpdateStepStatus_OnFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogFailure",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[appconfig].[sOnFailureJobStep]",
											"storedProcedureParameters": {
												"JobStepId": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.FirstRow.JobStepID",
														"type": "Expression"
													}
												},
												"OnFailure": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.firstRow.JobStepOnFailure",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "LKP_GetJobSteps",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "VAR_PipelineRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT [JobID], JobGroupID ,\nJobOrderNumber , \n[ParallelRunSteps],\nJobStepOnFailure,\n [JobStepID], [Pipeline], \nREPLACE(JobName,'\\','\\\\') AS JobName,\nREPLACE([JobStepName],'\\','\\\\') AS JobStepName\nFROM [appconfig].[vPipeline] \nWHERE JobId= '@{pipeline().parameters.JobID}' \nAND [sysState] = 1\nAND ExecutionInstanceId = '@{pipeline().parameters.ExecutionInstanceId}' \nOrder by JobOrderNumber , JobStepOrderNumber",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "VAR_PipelineRunId",
						"description": "Used to cancel the Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineRunId",
							"value": {
								"value": "@concat('https://management.azure.com/subscriptions/9c7d9dd3-840c-4b3f-818e-552865082e16/resourceGroups/s161d01-rg-odp/providers/Microsoft.DataFactory/factories/', pipeline().DataFactory,'/pipelineruns/',pipeline().RunId,'/cancel?api-version=2018-06-01')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobID": {
						"type": "int",
						"defaultValue": 2
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 8
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"varPipelineArray": {
						"type": "Array"
					},
					"varJobName": {
						"type": "String"
					},
					"PipelineRunId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-13T15:31:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_HTTP-Azure SQL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SQLServer-AzureSQL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SQLServer-ADLSG2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_UAMI_PE_AzureSQL-UAMI_ADLSG2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_UAMI_PE_Azure SQL-UAMI_PE_Azure SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JobStepSeq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FOR_JobStep_Seq",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_GetJobSteps",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_GetJobSteps').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IF_Enabled",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_Get_Enabled_JobStep",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LKP_Get_Enabled_JobStep').output.firstRow.sysState,1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SWT_JobStepType",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.firstRow.Pipeline",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "Azure SQL - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "HTTP - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_HTTP-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_HTTP-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "BLOB - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_BLOB-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_BLOB-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - BLOB",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-BLOB",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-BLOB",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - SQL Server",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-SQL Server",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-SQL Server",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - FileShare",
															"activities": [
																{
																	"name": "EXPL_Azure SQL-FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure SQL-FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Execute_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "SQL Server - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_SQLServer-AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_SQLServer-AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FILE - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_Azure File-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Azure File-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_AzureSQL-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_AzureSQL-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FileShare - Azure SQL",
															"activities": [
																{
																	"name": "EXPL_FileShare-Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_FileShare-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - FileShare",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Delete - FileShare",
															"activities": [
																{
																	"name": "EXPL_Delete_FileShare",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Delete_FileShare",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - BLOB",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-BLOB",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-BLOB",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "SQL Server - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_SQLServer-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_SQLServer-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "API - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_API-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_API-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - Databricks",
															"activities": [
																{
																	"name": "EXPL_Execute_Databricks",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_DBR",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "FileShare - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_FileShare-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_FileShare-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - ADLSG2",
															"activities": [
																{
																	"name": "EXPL_ADLSG2-ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "ADLSG2 - Azure SQL",
															"activities": [
																{
																	"name": "PL_ExecADLSG2_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_ADLSG2-Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Execute - UAMI PE Azure SQL",
															"activities": [
																{
																	"name": "EXPL_Execute_UAMI_PE_AzureSQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_Execute_UAMI_PE_AzureSQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "UAMI PE Azure SQL - UAMI PE ADLSG2",
															"activities": [
																{
																	"name": "EXPL_UAMI PE Azure SQL - UAMI PE ADLSG2",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_UAMI_PE_AzureSQL-UAMI_ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "UAMI PE Azure SQL - UAMI PE Azure SQL",
															"activities": [
																{
																	"name": "EXPL_UAMI PE Azure SQL - UAMI PE Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_UAMI_PE_Azure SQL-UAMI_PE_Azure SQL",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														},
														{
															"value": "Azure SQL - UAMI PE ADLSG2",
															"activities": [
																{
																	"name": "EXPL_Azure SQL - UAMI PE Azure SQL",
																	"type": "ExecutePipeline",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "PL_AzureSQL-UAMI_ADLSG2",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": true,
																		"parameters": {
																			"JobStepID": {
																				"value": "@item().JobStepID",
																				"type": "Expression"
																			},
																			"ParentLogID": {
																				"value": "@activity('LKP_LogStart').output.firstRow.LogID",
																				"type": "Expression"
																			},
																			"ExecutionInstanceId": {
																				"value": "@pipeline().parameters.ExecutionInstanceId",
																				"type": "Expression"
																			}
																		}
																	}
																}
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "LKP_Get_Enabled_JobStep",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogStart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT JobID, JobGroupID, JobOrderNumber, ParallelRunSteps, sysState, CONVERT(int, JobStepOnFailure) AS JobStepOnFailure, JobStepID, Pipeline, REPLACE(JobName,'\\','\\\\') AS JobName, REPLACE([JobStepName],'\\','\\\\') AS JobStepName \nFROM [appconfig].[vPipeline] \nWHERE JobStepId = '@{item().JobStepID}' \nAND ExecutionInstanceId = '@{pipeline().parameters.ExecutionInstanceId}' \n--AND sysState = 1\nORDER BY OrderNumber",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IF_Terminate",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_UpdateStepStatus_OnFailure",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LKP_Get_Enabled_JobStep').output.firstRow.JobStepOnFailure,2)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Break Out Job Seq",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "LKP_LogMasterEventFailure",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": {
														"value": "@variables('PipelineRunId')",
														"type": "Expression"
													},
													"connectVia": {
														"referenceName": "AutoResolveIntegrationRuntime",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": "{“message”:”Cancelling the pipeline”}",
													"authentication": {
														"resource": "https://management.azure.com",
														"credential": {
															"referenceName": "LS_Cred_uami_adf_wip",
															"type": "CredentialReference"
														}
													}
												}
											},
											{
												"name": "LKP_LogMasterEventFailure",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
														"storedProcedureParameters": {
															"Action": {
																"type": "String",
																"value": "Stop"
															},
															"DataFactoryName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().DataFactory",
																	"type": "Expression"
																}
															},
															"Description": {
																"type": "String",
																"value": null
															},
															"LogID": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.ParentLogID",
																	"type": "Expression"
																}
															},
															"PipelineId": {
																"type": "String",
																"value": {
																	"value": "@pipeline().RunId",
																	"type": "Expression"
																}
															},
															"PipelineName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().Pipeline",
																	"type": "Expression"
																}
															},
															"TriggerId": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerId",
																	"type": "Expression"
																}
															},
															"TriggerName": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerName",
																	"type": "Expression"
																}
															},
															"TriggerTime": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerTime",
																	"type": "Expression"
																}
															},
															"TriggerType": {
																"type": "String",
																"value": {
																	"value": "@pipeline().TriggerType",
																	"type": "Expression"
																}
															},
															"ParentLogID": {
																"type": "Int32",
																"value": null
															},
															"Status": {
																"type": "String",
																"value": "Failure"
															},
															"ExecutionInstanceId": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.ExecutionInstanceId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_CONFIG",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "LKP_LogFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Enabled",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Enabled: ', activity('LKP_Get_Enabled_JobStep').output.firstRow.SysState, ' | JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName, ' FAILURE: ', activity('IF_Enabled').error.message)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Failure"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogStart",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogSuccess",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Enabled",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Enabled: ', activity('LKP_Get_Enabled_JobStep').output.firstRow.SysState, ' | JobID: ', item().JobID, ' | JobStepID: ', item().JobStepID, ' | Pipeline: ', item().Pipeline, ' | JobName: ', item().JobName, ' | JobStepName: ', item().JobStepName )",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_UpdateStepStatus_OnFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogFailure",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[appconfig].[sOnFailureJobStep]",
											"storedProcedureParameters": {
												"JobStepId": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.FirstRow.JobStepID",
														"type": "Expression"
													}
												},
												"OnFailure": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_Get_Enabled_JobStep').output.firstRow.JobStepOnFailure",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					},
					{
						"name": "LKP_GetJobSteps",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "VAR_PipelineRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT JobID, JobGroupID, JobOrderNumber, ParallelRunSteps, JobStepOnFailure, JobStepID, Pipeline, REPLACE(JobName,'\\','\\\\') AS JobName, REPLACE([JobStepName],'\\','\\\\') AS JobStepName\nFROM [appconfig].[vPipeline] \nWHERE JobId= '@{pipeline().parameters.JobID}' \nAND sysState = 1\nAND ExecutionInstanceId = '@{pipeline().parameters.ExecutionInstanceId}' \nORDER BY JobOrderNumber , JobStepOrderNumber",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "VAR_PipelineRunId",
						"description": "Used to cancel the Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineRunId",
							"value": {
								"value": "@concat('https://management.azure.com/subscriptions/9c7d9dd3-840c-4b3f-818e-552865082e16/resourceGroups/s161d01-rg-odp/providers/Microsoft.DataFactory/factories/', pipeline().DataFactory,'/pipelineruns/',pipeline().RunId,'/cancel?api-version=2018-06-01')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobID": {
						"type": "int",
						"defaultValue": 176
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 9238
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 14756
					}
				},
				"variables": {
					"varPipelineArray": {
						"type": "Array"
					},
					"varJobName": {
						"type": "String"
					},
					"PipelineRunId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-13T15:31:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_HTTP-Azure SQL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SQLServer-AzureSQL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SQLServer-ADLSG2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_UAMI_PE_AzureSQL-UAMI_ADLSG2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_UAMI_PE_Azure SQL-UAMI_PE_Azure SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_GetJobs",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_LogStart_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT JobGroupID, JobGroup, JobID, JobName, ParallelRunSteps, JobOnFailure, JobOrderNumber \nFROM [appconfig].[vPipeline] \nWHERE JobGroup = '@{pipeline().parameters.JobGroupName}' \nORDER BY JobOrderNumber",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "VAR_PipelineRunId",
						"description": "Used to cancel the Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineRunId",
							"value": {
								"value": "@concat('https://management.azure.com/subscriptions/9c7d9dd3-840c-4b3f-818e-552865082e16/resourceGroups/s161d01-rg-odp/providers/Microsoft.DataFactory/factories/', pipeline().DataFactory,'/pipelineruns/',pipeline().RunId,'/cancel?api-version=2018-06-01')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FOR_Jobs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_ResetState",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_GetJobs').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LKP_LogStart",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('JobGroupID: ', item().JobGroupID, ' | JobGroup: ', item().JobGroup, ' | JobID: ', item().JobID, ' | JobName: ', item().JobName)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IF_Terminate",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_LogFailure",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().JobOnFailure,1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Break Out Job Parallel",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": {
														"value": "@variables('PipelineRunId')",
														"type": "Expression"
													},
													"connectVia": {
														"referenceName": "AutoResolveIntegrationRuntime",
														"type": "IntegrationRuntimeReference"
													},
													"method": "POST",
													"headers": {},
													"body": "{“message”:”Cancelling the pipeline”}",
													"authentication": {
														"resource": "https://management.azure.com",
														"credential": {
															"referenceName": "LS_Cred_uami_adf_wip",
															"type": "CredentialReference"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "IF_Parallel",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_LogStart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().ParallelRunSteps,true)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "EXPL_JobStepSeq",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_JobStepSeq",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"JobID": {
															"value": "@item().JobId",
															"type": "Expression"
														},
														"ParentLogID": {
															"value": "@activity('LKP_LogStart').output.firstRow.LogID",
															"type": "Expression"
														},
														"ExecutionInstanceId": {
															"value": "@pipeline().parameters.ExecutionInstanceId",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "EXPL_JobStepParallel",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_JobStepParallel",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"JobID": {
															"value": "@item().JobId",
															"type": "Expression"
														},
														"ParentLogID": {
															"value": "@activity('LKP_LogStart').output.firstRow.LogID",
															"type": "Expression"
														},
														"ExecutionInstanceId": {
															"value": "@pipeline().parameters.ExecutionInstanceId",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "LKP_LogSuccess",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Parallel",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('JobGroupID: ', item().JobGroupID, ' | JobGroup: ', item().JobGroup, ' | JobID: ', item().JobID, ' | JobName: ', item().JobName)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "IF_Parallel",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('JobGroupID: ', item().JobGroupID, ' | JobGroup: ', item().JobGroup, ' | JobID: ', item().JobID, ' | JobName: ', item().JobName, ' | FAILURE: ', activity('IF_Parallel').error.message)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Failure"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "LKP_ResetState",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_GetJobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[appconfig].[sResetStateJobSteps]",
								"storedProcedureParameters": {
									"JobGroupId": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_GetJobs').output.value[0].JobGroupID",
											"type": "Expression"
										}
									},
									"JobStepID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.JobStepID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LKP_LogStart_Master",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "VAR_PipelineRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Data Importer (Master) - JobGroup: ', pipeline().parameters.JobGroupName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess_Master",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_Jobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart_Master').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure_Master",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_Jobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart_Master').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobGroupName": {
						"type": "string",
						"defaultValue": "PDQ Daily (Development)"
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 15
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 0
					},
					"JobStepID": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"PipelineRunId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T11:20:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_JobStepSeq')]",
				"[concat(variables('factoryId'), '/pipelines/PL_JobStepParallel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Agent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_RefreshQueue",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "[appconfig].[sInsertExecutionInstance] select 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR_QueuedJobGroup",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_GetQueue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_GetQueue').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LKP_LogMasterEvent",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Event"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('ExecutionInstanceId: ', item().ExecutionInstanceId, ' | ScheduleID: ', item().ScheduleID, ' | ScheduleFrequency: ', item().ScheduleFrequencyName, ' | JobGroupID: ', item().JobGroupID, ' | JobGroupName: ', item().JobGroupName)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"type": "Int32",
													"value": {
														"value": "@item().ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "EXPL_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "LKP_LogMasterEvent",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_Master",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"JobGroupName": {
												"value": "@item().JobGroupName",
												"type": "Expression"
											},
											"ExecutionInstanceId": {
												"value": "@item().ExecutionInstanceId",
												"type": "Expression"
											},
											"ParentLogID": {
												"value": "@activity('LKP_LogMasterEvent').output.firstRow.LogID",
												"type": "Expression"
											},
											"JobStepID": {
												"value": "@item().JobStepID",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "LKP_LogMasterEventSuccess",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXPL_Master",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": null
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogMasterEvent').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogMasterEventFailure",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXPL_Master",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": null
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogMasterEvent').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Failure"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "LKP_LogStart",
						"description": "Logging Agent Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (Scheduler)"
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_QueuedJobGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (Scheduler)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FOR_QueuedJobGroup",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (Scheduler)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_GetQueue",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_RefreshQueue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \nFROM [execution].[vExecutionInstance]\nWHERE sysState = 1 \nAND ScheduleStartDate < CONVERT(datetime, CONVERT(datetimeoffset, SYSDATETIMEOFFSET()  ) AT TIME ZONE 'GMT Standard Time') \nORDER BY ScheduleStartDate, sysCreateDate",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varPipelineArray": {
						"type": "Array"
					},
					"varJobName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T11:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Agent_ManualLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_LogStart",
						"description": "Logging Manual Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "EXPL_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "EXPL_Master",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "EXPL_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LKP_InsertProcessQueue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobGroupName": {
									"value": "@pipeline().parameters.JobGroupName",
									"type": "Expression"
								},
								"ExecutionInstanceId": {
									"value": "@activity('LKP_InsertProcessQueue').output.firstRow.ExecutionInstanceId",
									"type": "Expression"
								},
								"ParentLogID": {
									"value": "@activity('LKP_LogStart').output.firstRow.LogID",
									"type": "Expression"
								},
								"JobStepID": 0
							}
						}
					},
					{
						"name": "LKP_InsertProcessQueue",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[appconfig].[sInsertExecutionInstanceManual]",
								"storedProcedureParameters": {
									"desiredSysState": {
										"type": "Int32",
										"value": "3"
									},
									"JobGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.JobGroupName",
											"type": "Expression"
										}
									},
									"Parameters": {
										"type": "String",
										"value": null
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": null
									},
									"ScheduleStartDate": {
										"type": "DateTime",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobGroupName": {
						"type": "string",
						"defaultValue": "DemoPatternMatch2ADLSG2 (Development)"
					}
				},
				"variables": {
					"varPipelineArray": {
						"type": "Array"
					},
					"varJobName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T11:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DI_Agent')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs every 5 Minutes",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Agent",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2021-06-09T07:52:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Agent')]"
			]
		}
	]
}