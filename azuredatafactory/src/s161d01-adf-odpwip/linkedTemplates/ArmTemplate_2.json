{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "s161d01-adf-odpwip"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_API-ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CP_API_ADLSG2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_REST_API",
								"type": "DatasetReference",
								"parameters": {
									"BaseURL": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Base_URL",
										"type": "Expression"
									},
									"RelativeURL": {
										"value": "@activity('LKP_Config').output.firstRow.Source_RelativeURL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLSG2_JSON",
								"type": "DatasetReference",
								"parameters": {
									"DS_Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Service_EndPoint",
										"type": "Expression"
									},
									"DS_KVS_SPN_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"DS_File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
										"type": "Expression"
									},
									"DS_File_Path_Directory": {
										"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_Directory,'YYYYMMDD',concat(formatDateTime(utcnow(),'yyyy'),'\\\\',formatDateTime(utcnow(),'MM'),'\\\\',formatDateTime(utcnow(),'dd')))",
										"type": "Expression"
									},
									"DS_File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Azure File-ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_FILE_Binary",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('Lookup1').output.firstRow.Source_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('Lookup1').output.firstRow.Source_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('Lookup1').output.firstRow.Source_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('Lookup1').output.firstRow.Source_FilePath_File",
										"type": "Expression"
									},
									"FilePath_Container": {
										"value": "@activity('Lookup1').output.firstRow.Source_FilePath_Container",
										"type": "Expression"
									},
									"SecretName": {
										"value": "@activity('Lookup1').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADSLG2_Binary",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('Lookup1').output.firstRow.Sink_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('Lookup1').output.firstRow.Sink_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('Lookup1').output.firstRow.Sink_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('Lookup1').output.firstRow.Sink_FilePath_File",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('Lookup1').output.firstRow.Sink_FilePath_Container",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('Lookup1').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('Lookup1').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('Lookup1').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('Lookup1').output.firstRow.JobGroup, 'Data Portal Export')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LKP_TransferOnce_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[appconfig].[sDisableJobStep]",
											"storedProcedureParameters": {
												"JobStepId": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.JobStepID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "5753"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 14891
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Azure SQL-Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to table: ', activity('LKP_Config').output.firstRow.Sink_TableName, ' FAILURE: ', activity('Source_Explicit').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Source_Explicit",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SWT_TransferType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, '')\n, 1\n, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy Data With SQLBlock",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Data With Table Reference",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SWT_TransferType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.TransferType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Type 1",
									"activities": [
										{
											"name": "EXEC Type 1 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('DROP TABLE IF EXISTS ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 2",
									"activities": [
										{
											"name": "EXEC Type 2 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 3",
									"activities": [
										{
											"name": "EXEC Type3 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' EXEC sp_rename ''' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''' , ''' , activity('LKP_Config').output.firstRow.Sink_TableName ,'_' , formatDateTime(utcnow(),'yyyyMMddhhmmss') , ''' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 4",
									"activities": [
										{
											"name": "EXEC Type 4 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								},
								{
									"value": "Type 5",
									"activities": [
										{
											"name": "EXEC Type 5 SQL Task",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
															"type": "Expression"
														},
														"DS_KVS_ConnectionString": {
															"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
															"type": "Expression"
														}
													}
												},
												"firstRowOnly": false
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "43"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Azure SQL-BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Azure SQL-FileShare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CP_AzureSQL_Fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_FileShare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"DS_Host": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
										"type": "Expression"
									},
									"DS_KVS_Username": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_UserName",
										"type": "Expression"
									},
									"DS_KVS_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"DS_FilePath_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
										"type": "Expression"
									},
									"DS_FilePath_File": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
										"type": "Expression"
									},
									"DS_Delimiter": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
										"type": "Expression"
									},
									"DS_CompressionType": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CP_AzureSQL_Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CP_AzureSQL_Fileshare",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File, ' FAILURE: ', activity('CP_AzureSQL_Fileshare').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Azure SQL-SQL Server')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQLServer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
										"type": "Expression"
									},
									"Table": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
										"type": "Expression"
									},
									"SecretName": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "int"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AzureSQL-ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Source_Explicit",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File, ' FAILURE: ', activity('Source_Explicit').error.message)\n",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Source_Explicit",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(or(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, ''),empty(activity('LKP_Config').output.firstRow.Source_SqlBlock))\n, 1\n, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy Data With SQLBlock",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Data With Table Reference",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"variables": {
					"notDummy": {
						"type": "String",
						"defaultValue": "[[\"1\"]"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AzureSQL-UAMI_ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_Source_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_Source_Type",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from table: ', activity('LKP_Config').output.firstRow.Source_TableName, ' to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File, ' FAILURE: ', activity('SWT_Source_Type').error.message)\n",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_Source_Type",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(empty(activity('LKP_Config').output.firstRow.Source_Server),'Skip'\n,if(or(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, '')\n,empty(activity('LKP_Config').output.firstRow.Source_SqlBlock))\n, 'Direct'\n, 'SqlBlock'))",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Direct",
									"activities": [
										{
											"name": "Copy Data With Table Reference",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"dataIntegrationUnits": 32
											},
											"inputs": [
												{
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Source_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"DS_Server": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Server",
															"type": "Expression"
														},
														"DS_Database": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Database",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_UAM_PE_ADLSG2_Parquet",
													"type": "DatasetReference",
													"parameters": {
														"DS_File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"DS_File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"DS_File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "SqlBlock",
									"activities": [
										{
											"name": "Copy Data With SQLBlock",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@activity('LKP_Config').output.firstRow.Source_SqlBlock",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "DS_UAM_PE_AzureSQLDB",
													"type": "DatasetReference",
													"parameters": {
														"DS_Schema": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
															"type": "Expression"
														},
														"DS_Table": {
															"value": "@activity('LKP_Config').output.firstRow.Source_TableName",
															"type": "Expression"
														},
														"DS_Server": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Server",
															"type": "Expression"
														},
														"DS_Database": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Database",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_UAM_PE_ADLSG2_Parquet",
													"type": "DatasetReference",
													"parameters": {
														"DS_File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"DS_File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"DS_File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Skip",
									"activities": [
										{
											"name": "Set skipStep 2",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "skipStep",
												"value": "1"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set skipStep",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "skipStep",
										"value": "1"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"variables": {
					"skipStep": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BLOB-Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Container",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BLOB-BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Container",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BLOB-FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Service_Endpoint": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Service_Endpoint",
										"type": "Expression"
									},
									"Key_Vault_Secret_Password": {
										"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"File_Path_Container": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Container",
										"type": "Expression"
									},
									"File_Path_Directory": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
										"type": "Expression"
									},
									"File_Path_File": {
										"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Delete_FileShare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.Sink_Category",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "FileShare",
									"activities": [
										{
											"name": "Delete_FileShare",
											"type": "Delete",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataset": {
													"referenceName": "DS_FileShare_CSV",
													"type": "DatasetReference",
													"parameters": {
														"DS_Host": {
															"value": "@activity('LKP_Config').output.firstRow.ExecuteServer",
															"type": "Expression"
														},
														"DS_KVS_Username": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_KeyVault_Secret_UserName",
															"type": "Expression"
														},
														"DS_KVS_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_KeyVault_Secret_Password",
															"type": "Expression"
														},
														"DS_FilePath_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_FilePath_Directory",
															"type": "Expression"
														},
														"DS_FilePath_File": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_FilePath_File",
															"type": "Expression"
														},
														"DS_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_Delimiter",
															"type": "Expression"
														},
														"DS_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Delete_CompressionType",
															"type": "Expression"
														}
													}
												},
												"enableLogging": false,
												"storeSettings": {
													"type": "FileServerReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@{activity('LKP_Config').output.firstRow.Delete_FilePath_File}",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "26"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 0
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Execute_AAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebHook1",
						"description": "Webhook: Runbook for cube management tasks 1) 'Processing AAS cubes'  or 2) 'Importing Schema' ",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "Web_RetrieveWebhookURL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Web_RetrieveWebhookURL').output.value",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(\n\tconcat(\n\t\t'{\"Input_SQL_ServerName\":\"'\n\t\t, activity('LKP_Config').output.firstRow.Source_Server\n\t\t,'\",\"Input_AAS_ServerName\":\"'\n\t\t, activity('LKP_Config').output.firstRow.Sink_Server\n\t\t,'\",\"Input_SQL_DatabaseName\":\"'\n\t\t, activity('LKP_Config').output.firstRow.Source_Database\n\t\t,'\",\"Input_Action\":\"'\n\t\t, activity('LKP_Config').output.firstRow.ExecuteCommand\n\t\t,'\"}'\n\t\t)\n\t)",
								"type": "Expression"
							},
							"timeout": "00:45:00"
						}
					},
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Web_RetrieveWebhookURL",
						"description": "Retrieves the WebHook URL from Key Vault , using the KV Secret Identifier for the secret.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(activity('LKP_Config').output.firstRow.Sink_Base_URL,'?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"disableCertValidation": false,
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Execute_AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_ObjectType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.Sink_ObjectType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Stored Procedure",
									"activities": [
										{
											"name": "LKP_LogFailure_Proc",
											"type": "Lookup",
											"dependsOn": [
												{
													"activity": "Stored procedure1",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Stop"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName, ' FAILURE: ', activity('Stored procedure1').error.message)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": {
																"value": "@activity('LKP_LogStart_Proc').output.firstRow.LogID",
																"type": "Expression"
															}
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "FAILURE"
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "LKP_LogStart_Proc",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Start"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": null
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "In Progress"
														},
														"ExecutionInstanceId": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ExecutionInstanceId",
																"type": "Expression"
															}
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "LKP_LogSuccess_Proc",
											"type": "Lookup",
											"dependsOn": [
												{
													"activity": "Stored procedure1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Stop"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": {
																"value": "@activity('LKP_LogStart_Proc').output.firstRow.LogID",
																"type": "Expression"
															}
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "Success"
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "Stored procedure1",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "LKP_LogStart_Proc",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_ProcedureName",
													"type": "Expression"
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_SQLDB_AzureSQL",
												"type": "LinkedServiceReference",
												"parameters": {
													"LS_KVS_ConnectionString": {
														"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
														"type": "Expression"
													},
													"LS_KVS_SPN_Password": "scrt-spn-DataImporter-UserPW",
													"LS_SPN_ID": "9ae7b2d2-483c-4970-93e9-2b5a1a9d9c14"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "EXEC SQL Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogStart_Query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('DECLARE @intSuccess int = 1; ',\nconcat(activity('LKP_Config').output.firstRow.ExecuteCommand,\n'; SELECT @intSuccess'))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LKP_LogStart_Query",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogSuccess_Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXEC SQL Query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_Query').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogFailure_Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXEC SQL Query",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand, ' FAILURE: ', activity('EXEC SQL Query').error.message)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_Query').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "FAILURE"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "25"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 43
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Execute_DBR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DBRN_Execute",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@activity('LKP_Config').output.firstRow.Sink_ProcedureName",
								"type": "Expression"
							},
							"baseParameters": {
								"ExecutionInstanceId": {
									"value": "@{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"ParentLoadId": {
									"value": "@{pipeline().parameters.ParentLogID}",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DBRN_Execute",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DBRN_Execute",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName, ' FAILURE: ', activity('DBRN_Execute').error.message)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "0"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 0
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Execute_UAMI_PE_AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_ObjectType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.Sink_ObjectType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Stored Procedure",
									"activities": [
										{
											"name": "LKP_LogFailure_Proc",
											"type": "Lookup",
											"dependsOn": [
												{
													"activity": "Stored procedure1",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Stop"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName, ' FAILURE: ', activity('Stored procedure1').error.message)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": {
																"value": "@activity('LKP_LogStart_Proc').output.firstRow.LogID",
																"type": "Expression"
															}
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "FAILURE"
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "LKP_LogStart_Proc",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Start"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": null
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "In Progress"
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "LKP_LogSuccess_Proc",
											"type": "Lookup",
											"dependsOn": [
												{
													"activity": "Stored procedure1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
													"storedProcedureParameters": {
														"Action": {
															"type": "String",
															"value": "Stop"
														},
														"DataFactoryName": {
															"type": "String",
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															}
														},
														"Description": {
															"type": "String",
															"value": {
																"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.Sink_ProcedureName)",
																"type": "Expression"
															}
														},
														"LogID": {
															"type": "Int32",
															"value": {
																"value": "@activity('LKP_LogStart_Proc').output.firstRow.LogID",
																"type": "Expression"
															}
														},
														"PipelineId": {
															"type": "String",
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															}
														},
														"PipelineName": {
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															}
														},
														"TriggerId": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															}
														},
														"TriggerName": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															}
														},
														"TriggerTime": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														},
														"TriggerType": {
															"type": "String",
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															}
														},
														"ParentLogID": {
															"type": "Int32",
															"value": {
																"value": "@pipeline().parameters.ParentLogID",
																"type": "Expression"
															}
														},
														"Status": {
															"type": "String",
															"value": "Success"
														}
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_CONFIG",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "Stored procedure1",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "LKP_LogStart_Proc",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_ProcedureName",
													"type": "Expression"
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_UAMI_PE_SQLDB_AzureSQL",
												"type": "LinkedServiceReference",
												"parameters": {
													"LS_Server": {
														"value": "@activity('LKP_Config').output.firstRow.Sink_Server",
														"type": "Expression"
													},
													"LS_Database": {
														"value": "@activity('LKP_Config').output.firstRow.Sink_Database",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "EXEC SQL Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LKP_LogStart_Query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('DECLARE @intSuccess int = 1; ',\nconcat(replace(replace(activity('LKP_Config').output.firstRow.ExecuteCommand,'<@@ParentLogId@@>',string(pipeline().parameters.ParentLogID)),'<@@ExecutionInstanceId@@>',string(pipeline().parameters.ExecutionInstanceId)),\n'; SELECT @intSuccess'))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_UAM_PE_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_Server": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteServer",
													"type": "Expression"
												},
												"DS_Database": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteDatabase",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LKP_LogStart_Query",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												},
												"ExecutionInstanceId": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ExecutionInstanceId",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogSuccess_Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXEC SQL Query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_Query').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogFailure_Query",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "EXEC SQL Query",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": {
														"value": "@concat('Execute: ',activity('LKP_Config').output.firstRow.ExecuteCommand, ' FAILURE: ', activity('EXEC SQL Query').error.message)",
														"type": "Expression"
													}
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_Query').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParentLogID",
														"type": "Expression"
													}
												},
												"Status": {
													"type": "String",
													"value": "FAILURE"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "2"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": 10
					},
					"ExecutionInstanceId": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"folder": {
					"name": "Execute"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FTP_ProcessLocations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Metadata_GetFolderChildren",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare_Folder",
								"type": "DatasetReference",
								"parameters": {
									"DS_Host": {
										"value": "@pipeline().parameters.FTP_Host",
										"type": "Expression"
									},
									"DS_KVS_Username": {
										"value": "@pipeline().parameters.FTP_UserName",
										"type": "Expression"
									},
									"DS_KVS_Password": {
										"value": "@pipeline().parameters.FTP_Password",
										"type": "Expression"
									},
									"DS_FilePath_Directory": {
										"value": "@pipeline().parameters.FTP_FilePath_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"description": "Logging Agent Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (Scheduler)"
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Filter_ToFilesOnly",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Metadata_GetFolderChildren",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Metadata_GetFolderChildren').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_FileCallAPI",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Var_SetAPISecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_ToFilesOnly').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LKP_CheckFTPFileIsToLoad",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Metadata_OnFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": {
												"value": "[[util].[sCheckFTPFileToLoad]",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"FileModifiedDate": {
													"type": "String",
													"value": {
														"value": "@activity('Metadata_OnFile').output.lastModified",
														"type": "Expression"
													}
												},
												"FTPFilePath": {
													"type": "String",
													"value": {
														"value": "@variables('FTP_Full_FileAndPath')",
														"type": "Expression"
													}
												},
												"ParentLogId": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_inner').output.firstRow.LogID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Metadata_OnFile",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Var_SetFullFileAndPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_FileShare_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Host": {
													"value": "@pipeline().parameters.FTP_Host",
													"type": "Expression"
												},
												"DS_KVS_Username": {
													"value": "@pipeline().parameters.FTP_UserName",
													"type": "Expression"
												},
												"DS_KVS_Password": {
													"value": "@pipeline().parameters.FTP_Password",
													"type": "Expression"
												},
												"DS_FilePath_Directory": {
													"value": "@pipeline().parameters.FTP_FilePath_Directory",
													"type": "Expression"
												},
												"DS_FilePath_File": {
													"value": "@item().name",
													"type": "Expression"
												},
												"DS_Delimiter": ",",
												"DS_CompressionType": "None"
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Var_SetFullFileAndPath",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LKP_LogStart_Inner",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FTP_Full_FileAndPath",
										"value": {
											"value": "@concat(pipeline().parameters.FTP_Host,pipeline().parameters.FTP_FilePath_Directory,'/',item().name)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If_ReturnMustbeRegistered",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_CheckFTPFileIsToLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LKP_CheckFTPFileIsToLoad').output.firstRow.Result, 1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Var_APIURL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "API_Full_URL",
													"value": {
														"value": "@concat(pipeline().parameters.APIBaseURL,'ftp/', pipeline().parameters.CollectionAwardingOrganisationId, '/', item().name,'/false', variables('API_code_secret'))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Web_ReturnRegisterAndSubmission_API",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "Var_APIURL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": {
														"value": "@variables('API_Full_URL')",
														"type": "Expression"
													},
													"method": "GET",
													"headers": {}
												}
											}
										]
									}
								},
								{
									"name": "LKP_LogStart_Inner",
									"description": "Logging Agent Pipeline",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Start"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": "Data Importer (Scheduler)"
												},
												"LogID": {
													"type": "Int32",
													"value": null
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "In Progress"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogEventSuccess_inner",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If_ReturnMustbeRegistered",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": null
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_inner').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Success"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LKP_LogEventFailure_inner",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If_ReturnMustbeRegistered",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
											"storedProcedureParameters": {
												"Action": {
													"type": "String",
													"value": "Stop"
												},
												"DataFactoryName": {
													"type": "String",
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													}
												},
												"Description": {
													"type": "String",
													"value": null
												},
												"LogID": {
													"type": "Int32",
													"value": {
														"value": "@activity('LKP_LogStart_inner').output.firstRow.LogID",
														"type": "Expression"
													}
												},
												"PipelineId": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"PipelineName": {
													"type": "String",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												"TriggerId": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												},
												"TriggerName": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													}
												},
												"TriggerTime": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												"TriggerType": {
													"type": "String",
													"value": {
														"value": "@pipeline().TriggerType",
														"type": "Expression"
													}
												},
												"ParentLogID": {
													"type": "Int32",
													"value": null
												},
												"Status": {
													"type": "String",
													"value": "Failure"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_CONFIG",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "Web_kv_API_secret",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Filter_ToFilesOnly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.APICode_kv_Secret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Var_SetAPISecret",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_kv_API_secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_code_secret",
							"value": {
								"value": "@activity('Web_kv_API_secret').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LKP_LogEventSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach_FileCallAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogEventFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach_FileCallAPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": null
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FTP_Host": {
						"type": "string",
						"defaultValue": "\\\\10.204.101.4\\FTP"
					},
					"FTP_UserName": {
						"type": "string",
						"defaultValue": "FTPAccess"
					},
					"FTP_Password": {
						"type": "string",
						"defaultValue": "scrt-FTP-Share-Password"
					},
					"FTP_FilePath_Directory": {
						"type": "string",
						"defaultValue": "RiskTeam\\SVR_DataSubmission"
					},
					"CollectionAwardingOrganisationId": {
						"type": "string",
						"defaultValue": "14429"
					},
					"APIBaseURL": {
						"type": "string",
						"defaultValue": "https://ofqds-dev-di-func01.azurewebsites.net/api/ReturnRegisterAndValidate/"
					},
					"APICode_kv_Secret": {
						"type": "string",
						"defaultValue": "https://ofqds-prod-kv01.vault.azure.net/secrets/scrt-api-returnsubmission-APIKey-dev/de2a2cc063734df6aaf73274d2620f0b?api-version=7.0"
					}
				},
				"variables": {
					"FTP_Host": {
						"type": "String"
					},
					"FTP_UserName": {
						"type": "String"
					},
					"FTP_Password": {
						"type": "String"
					},
					"FTP_FilePath_Directory": {
						"type": "String"
					},
					"API_code_secret": {
						"type": "String"
					},
					"API_Full_URL": {
						"type": "String"
					},
					"FTP_Full_FileAndPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ReturnsProcesses"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FileShare-ADLSG2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LKP_Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_SourceObjectType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SWT_SourceObjectType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWT_SourceObjectType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKP_Config').output.firstRow.Source_ObjectType",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Excel",
									"activities": [
										{
											"name": "CP_Fileshare_ADLSG2_Excel",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "ExcelSource",
													"storeSettings": {
														"type": "FileServerReadSettings",
														"recursive": true,
														"wildcardFolderPath": {
															"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
															"type": "Expression"
														},
														"enablePartitionDiscovery": false
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_FileShare_Excel",
													"type": "DatasetReference",
													"parameters": {
														"DS_Host": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Service_Endpoint",
															"type": "Expression"
														},
														"DS_KVS_Username": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Username",
															"type": "Expression"
														},
														"DS_KVS_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Password",
															"type": "Expression"
														},
														"DS_FilePath_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
															"type": "Expression"
														},
														"DS_FilePath_File": {
															"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
															"type": "Expression"
														},
														"DS_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Source_Delimiter",
															"type": "Expression"
														},
														"DS_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Source_CompressionType",
															"type": "Expression"
														},
														"DS_WorkSheetName": {
															"value": "@activity('LKP_Config').output.firstRow.Source_WorksheetName",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_ADLSG2_CSV",
													"type": "DatasetReference",
													"parameters": {
														"Service_EndPoint": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
															"type": "Expression"
														},
														"Key_Vault_Secret_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
															"type": "Expression"
														},
														"File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"File_Path_Directory": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
															"type": "Expression"
														},
														"File_Path_File": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
															"type": "Expression"
														},
														"File_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
															"type": "Expression"
														},
														"File_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "CSV File",
									"activities": [
										{
											"name": "CP_Fileshare_ADLSG2_CSV",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "FileServerReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DS_FileShare_CSV",
													"type": "DatasetReference",
													"parameters": {
														"DS_Host": "@activity('LKP_Config').output.firstRow.Source_Service_Endpoint",
														"DS_KVS_Username": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_UserName",
														"DS_KVS_Password": "@activity('LKP_Config').output.firstRow.Source_Key_Vault_Secret_Password",
														"DS_FilePath_Directory": "@activity('LKP_Config').output.firstRow.Source_FilePath_Directory",
														"DS_FilePath_File": "@activity('LKP_Config').output.firstRow.Source_FilePath_File",
														"DS_Delimiter": "@activity('LKP_Config').output.firstRow.Source_Delimiter",
														"DS_CompressionType": "@activity('LKP_Config').output.firstRow.Source_CompressionType"
													}
												}
											],
											"outputs": [
												{
													"referenceName": "DS_ADLSG2_CSV",
													"type": "DatasetReference",
													"parameters": {
														"Service_EndPoint": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
															"type": "Expression"
														},
														"Key_Vault_Secret_Password": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_Password",
															"type": "Expression"
														},
														"File_Path_Container": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
															"type": "Expression"
														},
														"File_Path_Directory": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_Directory,'YYYYMMDD',concat(formatDateTime(utcnow(),'yyyy'),'\\\\',formatDateTime(utcnow(),'MM'),'\\\\',formatDateTime(utcnow(),'dd')))",
															"type": "Expression"
														},
														"File_Path_File": {
															"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_File,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
															"type": "Expression"
														},
														"File_Delimiter": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
															"type": "Expression"
														},
														"File_CompressionType": {
															"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string",
						"defaultValue": "4666"
					},
					"ParentLogID": {
						"type": "int",
						"defaultValue": -1
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FileShare-Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{if(equals(activity('Lookup1').output.firstRow.Sink_ObjectType,'Stage Table' ),concat('TRUNCATE TABLE ',activity('Lookup1').output.firstRow.Sink_SchemaName ,'.', activity('Lookup1').output.firstRow.Sink_TableName),'')}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FileShare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"DS_Host": {
										"value": "@activity('Lookup1').output.firstRow.Source_Service_Endpoint",
										"type": "Expression"
									},
									"DS_KVS_Username": {
										"value": "@activity('Lookup1').output.firstRow.Source_Key_Vault_Secret_UserName",
										"type": "Expression"
									},
									"DS_KVS_Password": {
										"value": "@activity('Lookup1').output.firstRow.Source_Key_Vault_Secret_Password",
										"type": "Expression"
									},
									"DS_FilePath_Directory": {
										"value": "@activity('Lookup1').output.firstRow.Source_FilePath_Directory",
										"type": "Expression"
									},
									"DS_FilePath_File": {
										"value": "@activity('Lookup1').output.firstRow.Source_FilePath_File",
										"type": "Expression"
									},
									"DS_Delimiter": {
										"value": "@activity('Lookup1').output.firstRow.Source_Delimiter",
										"type": "Expression"
									},
									"DS_CompressionType": {
										"value": "@activity('Lookup1').output.firstRow.Source_CompressionType",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSQLDB",
								"type": "DatasetReference",
								"parameters": {
									"DS_Schema": {
										"value": "@activity('Lookup1').output.firstRow.Sink_SchemaName",
										"type": "Expression"
									},
									"DS_Table": {
										"value": "@activity('Lookup1').output.firstRow.Sink_TableName",
										"type": "Expression"
									},
									"DS_KVS_ConnectionString": {
										"value": "@activity('Lookup1').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LKP_LogStart",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from file: ', activity('Lookup1').output.firstRow.Source_FilePath_File,' to table: ',activity('Lookup1').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									},
									"ExecutionInstanceId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ExecutionInstanceId",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from file: ', activity('Lookup1').output.firstRow.Source_FilePath_File,' to table: ',activity('Lookup1').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": {
											"value": "@concat('Copy from file: ', activity('Lookup1').output.firstRow.Source_FilePath_File,' to table: ',activity('Lookup1').output.firstRow.Sink_TableName)",
											"type": "Expression"
										}
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParentLogID",
											"type": "Expression"
										}
									},
									"Status": {
										"type": "String",
										"value": "FAILURE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"JobStepID": {
						"type": "string"
					},
					"ParentLogID": {
						"type": "int"
					},
					"ExecutionInstanceId": {
						"type": "int"
					}
				},
				"folder": {
					"name": "Copy"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FuncApp_ManualReturnLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_LogStart",
						"description": "Logging Manual Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Start"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": null
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "In Progress"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogSuccess",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DataPlatformFunctionApp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Success"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_LogFailure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DataPlatformFunctionApp",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logger].[sLogEvent]",
								"storedProcedureParameters": {
									"Action": {
										"type": "String",
										"value": "Stop"
									},
									"DataFactoryName": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"Description": {
										"type": "String",
										"value": "Data Importer (ManualLoad)"
									},
									"LogID": {
										"type": "Int32",
										"value": {
											"value": "@activity('LKP_LogStart').output.firstRow.LogID",
											"type": "Expression"
										}
									},
									"PipelineId": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TriggerId": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										}
									},
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										}
									},
									"TriggerTime": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									"TriggerType": {
										"type": "String",
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										}
									},
									"ParentLogID": {
										"type": "Int32",
										"value": null
									},
									"Status": {
										"type": "String",
										"value": "Failure"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_CONFIG",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DataPlatformFunctionApp",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LKP_LogStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.URL",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"URL": {
						"type": "string",
						"defaultValue": "https://ofqds-dev-di-func01.azurewebsites.net/api/ReturnRegisterAndValidate/aoportal/13519/aqa-2019-3-gcse-20190814_205658.csv/false?code=oifua6QXGyxL2DVCW6xNcgxnx5pXSPiEA5eZChBfAesdwITvjS9vuA=="
					}
				},
				"variables": {
					"varPipelineArray": {
						"type": "Array"
					},
					"varJobName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ReturnsProcesses"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-14T16:08:50Z"
			},
			"dependsOn": []
		}
	]
}