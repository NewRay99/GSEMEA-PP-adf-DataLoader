{
	"name": "PL_ADLSG2-Azure SQL",
	"properties": {
		"activities": [
			{
				"name": "LKP_Config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogStart",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LKP_Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Start"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": null
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "In Progress"
							},
							"ExecutionInstanceId": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ExecutionInstanceId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogSuccess",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Source_Explicit",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Stop"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": {
									"value": "@activity('LKP_LogStart').output.firstRow.LogID",
									"type": "Expression"
								}
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "Success"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogFailure",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Source_Explicit",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Stop"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy table: ', activity('LKP_Config').output.firstRow.Sink_TableName)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": {
									"value": "@activity('LKP_LogStart').output.firstRow.LogID",
									"type": "Expression"
								}
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "FAILURE"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Source_Explicit",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SWT_TransferType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('LKP_Config').output.firstRow.Source_SqlBlock, null), 1, 0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy Data With SQLBlock",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"tableOption": "autoCreate"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_ADLSG2_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"DS_File_Path_Container": {
											"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Container\n",
											"type": "Expression"
										},
										"DS_File_Path_Directory": {
											"value": "@replace(activity('LKP_Config').output.firstRow.Source_FilePath_Directory,'YYYYMMDD',concat(formatDateTime(utcnow(),'yyyy'),'\\',formatDateTime(utcnow(),'MM'),'\\',formatDateTime(utcnow(),'dd')))\n",
											"type": "Expression"
										},
										"DS_File_Path_File": {
											"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File\n",
											"type": "Expression"
										},
										"DS_Service_Endpoint": {
											"value": "@activity('LKP_Config').output.firstRow.Source_Service_EndPoint\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_AzureSQLDB",
									"type": "DatasetReference",
									"parameters": {
										"DS_Schema": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
											"type": "Expression"
										},
										"DS_Table": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
											"type": "Expression"
										},
										"DS_KVS_ConnectionString": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy Data With Table Reference",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup Schema Mappings",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(coalesce(activity('LookUp Schema Mappings').output.firstRow.json_output,'{\"type\": \"TabularTranslator\",\"mapComplexValuesToString\":true}'))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ADLSG2_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"DS_File_Path_Container": {
											"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_Container\n",
											"type": "Expression"
										},
										"DS_File_Path_Directory": {
											"value": "@replace(activity('LKP_Config').output.firstRow.Source_FilePath_Directory,'YYYYMMDD',concat(formatDateTime(utcnow(),'yyyy'),'\\',formatDateTime(utcnow(),'MM'),'\\',formatDateTime(utcnow(),'dd')))\n",
											"type": "Expression"
										},
										"DS_File_Path_File": {
											"value": "@activity('LKP_Config').output.firstRow.Source_FilePath_File\n",
											"type": "Expression"
										},
										"DS_Service_Endpoint": {
											"value": "@activity('LKP_Config').output.firstRow.Source_Service_EndPoint\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_AzureSQLDB",
									"type": "DatasetReference",
									"parameters": {
										"DS_Schema": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
											"type": "Expression"
										},
										"DS_Table": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
											"type": "Expression"
										},
										"DS_KVS_ConnectionString": {
											"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Lookup Schema Mappings",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[appconfig].[sGetEntityAttributeMapping]",
									"storedProcedureParameters": {
										"Sink_SchemaName": {
											"value": {
												"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
												"type": "Expression"
											}
										},
										"Sink_TableName": {
											"value": {
												"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_CONFIG",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			},
			{
				"name": "SWT_TransferType",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "LKP_LogStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('LKP_Config').output.firstRow.TransferType",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Type 1",
							"activities": [
								{
									"name": "EXEC Type 1 SQL Task",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('DROP TABLE IF EXISTS ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_SchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_TableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						},
						{
							"value": "Type 2",
							"activities": [
								{
									"name": "EXEC Type 2 SQL Task",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						},
						{
							"value": "Type 3",
							"activities": [
								{
									"name": "EXEC Type3 SQL Task",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' EXEC sp_rename ''' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''' , ''' , activity('LKP_Config').output.firstRow.Sink_TableName ,'_' , formatDateTime(utcnow(),'yyyyMMddhhmmss') , ''' SELECT 1 ')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						},
						{
							"value": "Type 4",
							"activities": [
								{
									"name": "EXEC Type 4 SQL Task",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						},
						{
							"value": "Type 5",
							"activities": [
								{
									"name": "EXEC Type 5 SQL Task",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF object_id(''', activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ''', ''U'') is not null',\n' TRUNCATE TABLE ' , activity('LKP_Config').output.firstRow.Sink_SchemaName ,  '.', activity('LKP_Config').output.firstRow.Sink_TableName , ' SELECT 1 ')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AzureSQLDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_Schema": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteSchemaName",
													"type": "Expression"
												},
												"DS_Table": {
													"value": "@activity('LKP_Config').output.firstRow.ExecuteTableName",
													"type": "Expression"
												},
												"DS_KVS_ConnectionString": {
													"value": "@activity('LKP_Config').output.firstRow.Execute_Key_Vault_Secret_ConnectionString",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"JobStepID": {
				"type": "string",
				"defaultValue": "43"
			},
			"ParentLogID": {
				"type": "int",
				"defaultValue": 1
			},
			"ExecutionInstanceId": {
				"type": "int"
			}
		},
		"folder": {
			"name": "Copy"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-25T15:41:44Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}