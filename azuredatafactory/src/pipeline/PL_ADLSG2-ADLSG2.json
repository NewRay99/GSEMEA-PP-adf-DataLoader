{
	"name": "PL_ADLSG2-ADLSG2",
	"properties": {
		"activities": [
			{
				"name": "LKP_Config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT *\nFROM [appconfig].[vPipeline]\nWHERE JobStepID= @{pipeline().parameters.JobStepID}\nAND ExecutionInstanceId = @{pipeline().parameters.ExecutionInstanceId}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogStart",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LKP_Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Start"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy to file: ', activity('LKP_config').output.firstRow.Sink_FilePath_File)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": null
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "In Progress"
							},
							"ExecutionInstanceId": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ExecutionInstanceId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogSuccess",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SWT_ObjectTypes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Stop"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": {
									"value": "@activity('LKP_LogStart').output.firstRow.LogID",
									"type": "Expression"
								}
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "Success"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_LogFailure",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SWT_ObjectTypes",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[logger].[sLogEvent]",
						"storedProcedureParameters": {
							"Action": {
								"type": "String",
								"value": "Stop"
							},
							"DataFactoryName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"Description": {
								"type": "String",
								"value": {
									"value": "@concat('Copy to file: ', activity('LKP_Config').output.firstRow.Sink_FilePath_File)",
									"type": "Expression"
								}
							},
							"LogID": {
								"type": "Int32",
								"value": {
									"value": "@activity('LKP_LogStart').output.firstRow.LogID",
									"type": "Expression"
								}
							},
							"PipelineId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"TriggerId": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							},
							"TriggerTime": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"TriggerType": {
								"type": "String",
								"value": {
									"value": "@pipeline().TriggerType",
									"type": "Expression"
								}
							},
							"ParentLogID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParentLogID",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "FAILURE"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CONFIG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SWT_ObjectTypes",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "LKP_LogStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@concat(activity('LKP_Config').output.firstRow.Source_ObjectType, '_TO_',activity('LKP_Config').output.firstRow.Sink_ObjectType)",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "CSV File_TO_Parquet File",
							"activities": [
								{
									"name": "CP_ADLSG2_CSV_ADLSG2_Parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLSG2_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Source_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												},
												"DS_File_Delimiter": {
													"value": "@activity('LKP_config').output.firstRow.Source_Delimiter",
													"type": "Expression"
												},
												"DS_File_CompressionType": {
													"value": "@activity('LKP_config').output.firstRow.Source_CompressionType",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "CSV File_TO_CSV File",
							"activities": [
								{
									"name": "CP_ADLSG2_CSV_ADLSG2_CSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLSG2_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Source_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												},
												"DS_File_Delimiter": {
													"value": "@activity('LKP_config').output.firstRow.Source_Delimiter",
													"type": "Expression"
												},
												"DS_File_CompressionType": {
													"value": "@activity('LKP_config').output.firstRow.Source_CompressionType\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_Directory,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@replace(activity('LKP_Config').output.firstRow.Sink_FilePath_File,'[YYYYMMDD]',formatDateTime(utcnow(),'yyyyMMdd'))",
													"type": "Expression"
												},
												"DS_File_Delimiter": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Delimiter",
													"type": "Expression"
												},
												"DS_File_CompressionType": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_CompressionType",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "JSON File_TO_Parquet File",
							"activities": [
								{
									"name": "CP_ADLSG2_JSON_ADLSG2_Parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLSG2_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Source_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_Config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "Parquet File_TO_CSV File",
							"activities": [
								{
									"name": "CP_ADLSG2_Parquet_ADLSG2_CSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Source_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_Directory\n",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_File_Delimiter": {
													"value": "@activity('LKP_config').output.firstRow.Sink_Delimiter\n",
													"type": "Expression"
												},
												"DS_File_CompressionType": {
													"value": "@activity('LKP_config').output.firstRow.Sink_CompressionType",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "Parquet File_TO_PSV File",
							"activities": [
								{
									"name": "CP_ADLSG2_Parquet_ADLSG2_PSV",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLSG2_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_Directory",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Source_FilePath_File",
													"type": "Expression"
												},
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Source_Service_Endpoint",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLSG2_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_Service_Endpoint": {
													"value": "@activity('LKP_config').output.firstRow.Sink_Service_Endpoint",
													"type": "Expression"
												},
												"DS_File_Path_Container": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_Container",
													"type": "Expression"
												},
												"DS_File_Path_Directory": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_Directory\n",
													"type": "Expression"
												},
												"DS_File_Path_File": {
													"value": "@activity('LKP_config').output.firstRow.Sink_FilePath_File",
													"type": "Expression"
												},
												"DS_File_Delimiter": {
													"value": "@activity('LKP_config').output.firstRow.Sink_Delimiter\n",
													"type": "Expression"
												},
												"DS_File_CompressionType": {
													"value": "@activity('LKP_config').output.firstRow.Sink_CompressionType",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"JobStepID": {
				"type": "string"
			},
			"ParentLogID": {
				"type": "string"
			},
			"ExecutionInstanceId": {
				"type": "int"
			}
		},
		"folder": {
			"name": "Copy"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-25T15:41:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}